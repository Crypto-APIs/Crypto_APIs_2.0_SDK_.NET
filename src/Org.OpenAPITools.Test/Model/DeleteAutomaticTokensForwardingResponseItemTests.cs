/*
 * Crypto APIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: bizdev@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing DeleteAutomaticTokensForwardingResponseItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DeleteAutomaticTokensForwardingResponseItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DeleteAutomaticTokensForwardingResponseItem
        //private DeleteAutomaticTokensForwardingResponseItem instance;

        public DeleteAutomaticTokensForwardingResponseItemTests()
        {
            // TODO uncomment below to create an instance of DeleteAutomaticTokensForwardingResponseItem
            //instance = new DeleteAutomaticTokensForwardingResponseItem();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DeleteAutomaticTokensForwardingResponseItem
        /// </summary>
        [Fact]
        public void DeleteAutomaticTokensForwardingResponseItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" DeleteAutomaticTokensForwardingResponseItem
            //Assert.IsType<DeleteAutomaticTokensForwardingResponseItem>(instance);
        }


        /// <summary>
        /// Test the property 'CallbackUrl'
        /// </summary>
        [Fact]
        public void CallbackUrlTest()
        {
            // TODO unit test for the property 'CallbackUrl'
        }
        /// <summary>
        /// Test the property 'ConfirmationsCount'
        /// </summary>
        [Fact]
        public void ConfirmationsCountTest()
        {
            // TODO unit test for the property 'ConfirmationsCount'
        }
        /// <summary>
        /// Test the property 'CreatedTimestamp'
        /// </summary>
        [Fact]
        public void CreatedTimestampTest()
        {
            // TODO unit test for the property 'CreatedTimestamp'
        }
        /// <summary>
        /// Test the property 'FeeAddress'
        /// </summary>
        [Fact]
        public void FeeAddressTest()
        {
            // TODO unit test for the property 'FeeAddress'
        }
        /// <summary>
        /// Test the property 'FeePriority'
        /// </summary>
        [Fact]
        public void FeePriorityTest()
        {
            // TODO unit test for the property 'FeePriority'
        }
        /// <summary>
        /// Test the property 'FromAddress'
        /// </summary>
        [Fact]
        public void FromAddressTest()
        {
            // TODO unit test for the property 'FromAddress'
        }
        /// <summary>
        /// Test the property 'MinimumTransferAmount'
        /// </summary>
        [Fact]
        public void MinimumTransferAmountTest()
        {
            // TODO unit test for the property 'MinimumTransferAmount'
        }
        /// <summary>
        /// Test the property 'ReferenceId'
        /// </summary>
        [Fact]
        public void ReferenceIdTest()
        {
            // TODO unit test for the property 'ReferenceId'
        }
        /// <summary>
        /// Test the property 'ToAddress'
        /// </summary>
        [Fact]
        public void ToAddressTest()
        {
            // TODO unit test for the property 'ToAddress'
        }
        /// <summary>
        /// Test the property 'TokenData'
        /// </summary>
        [Fact]
        public void TokenDataTest()
        {
            // TODO unit test for the property 'TokenData'
        }

    }

}
