/*
 * Crypto APIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: bizdev@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing NewUnconfirmedCoinsTransactionsResponseItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class NewUnconfirmedCoinsTransactionsResponseItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for NewUnconfirmedCoinsTransactionsResponseItem
        //private NewUnconfirmedCoinsTransactionsResponseItem instance;

        public NewUnconfirmedCoinsTransactionsResponseItemTests()
        {
            // TODO uncomment below to create an instance of NewUnconfirmedCoinsTransactionsResponseItem
            //instance = new NewUnconfirmedCoinsTransactionsResponseItem();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NewUnconfirmedCoinsTransactionsResponseItem
        /// </summary>
        [Fact]
        public void NewUnconfirmedCoinsTransactionsResponseItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" NewUnconfirmedCoinsTransactionsResponseItem
            //Assert.IsType<NewUnconfirmedCoinsTransactionsResponseItem>(instance);
        }


        /// <summary>
        /// Test the property 'CallbackSecretKey'
        /// </summary>
        [Fact]
        public void CallbackSecretKeyTest()
        {
            // TODO unit test for the property 'CallbackSecretKey'
        }
        /// <summary>
        /// Test the property 'CallbackUrl'
        /// </summary>
        [Fact]
        public void CallbackUrlTest()
        {
            // TODO unit test for the property 'CallbackUrl'
        }
        /// <summary>
        /// Test the property 'ConfirmationsCount'
        /// </summary>
        [Fact]
        public void ConfirmationsCountTest()
        {
            // TODO unit test for the property 'ConfirmationsCount'
        }
        /// <summary>
        /// Test the property 'CreatedTimestamp'
        /// </summary>
        [Fact]
        public void CreatedTimestampTest()
        {
            // TODO unit test for the property 'CreatedTimestamp'
        }
        /// <summary>
        /// Test the property 'EventType'
        /// </summary>
        [Fact]
        public void EventTypeTest()
        {
            // TODO unit test for the property 'EventType'
        }
        /// <summary>
        /// Test the property 'IsActive'
        /// </summary>
        [Fact]
        public void IsActiveTest()
        {
            // TODO unit test for the property 'IsActive'
        }
        /// <summary>
        /// Test the property 'ReferenceId'
        /// </summary>
        [Fact]
        public void ReferenceIdTest()
        {
            // TODO unit test for the property 'ReferenceId'
        }
        /// <summary>
        /// Test the property 'TransactionId'
        /// </summary>
        [Fact]
        public void TransactionIdTest()
        {
            // TODO unit test for the property 'TransactionId'
        }

    }

}
