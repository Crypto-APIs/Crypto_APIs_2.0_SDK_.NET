/*
 * Crypto APIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: bizdev@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing AutomaticTokensForwardingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AutomaticTokensForwardingApiTests : IDisposable
    {
        private AutomaticTokensForwardingApi instance;

        public AutomaticTokensForwardingApiTests()
        {
            instance = new AutomaticTokensForwardingApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AutomaticTokensForwardingApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AutomaticTokensForwardingApi
            //Assert.IsType<AutomaticTokensForwardingApi>(instance);
        }

        /// <summary>
        /// Test AddTokensToExistingFromAddress
        /// </summary>
        [Fact]
        public void AddTokensToExistingFromAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //AddTokensToExistingFromAddressRequestBody addTokensToExistingFromAddressRequestBody = null;
            //var response = instance.AddTokensToExistingFromAddress(blockchain, network, context, addTokensToExistingFromAddressRequestBody);
            //Assert.IsType<AddTokensToExistingFromAddressResponse>(response);
        }

        /// <summary>
        /// Test CreateAutomaticTokensForwarding
        /// </summary>
        [Fact]
        public void CreateAutomaticTokensForwardingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //CreateAutomaticTokensForwardingRequestBody createAutomaticTokensForwardingRequestBody = null;
            //var response = instance.CreateAutomaticTokensForwarding(blockchain, network, context, createAutomaticTokensForwardingRequestBody);
            //Assert.IsType<CreateAutomaticTokensForwardingResponse>(response);
        }

        /// <summary>
        /// Test DeleteAutomaticTokensForwarding
        /// </summary>
        [Fact]
        public void DeleteAutomaticTokensForwardingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string referenceId = null;
            //string context = null;
            //var response = instance.DeleteAutomaticTokensForwarding(blockchain, network, referenceId, context);
            //Assert.IsType<DeleteAutomaticTokensForwardingResponse>(response);
        }

        /// <summary>
        /// Test GetFeeAddressDetails
        /// </summary>
        [Fact]
        public void GetFeeAddressDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //var response = instance.GetFeeAddressDetails(blockchain, network, context);
            //Assert.IsType<GetFeeAddressDetailsResponse>(response);
        }

        /// <summary>
        /// Test ListTokensForwardingAutomations
        /// </summary>
        [Fact]
        public void ListTokensForwardingAutomationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.ListTokensForwardingAutomations(blockchain, network, context, limit, offset);
            //Assert.IsType<ListTokensForwardingAutomationsResponse>(response);
        }
    }
}
