/*
 * Crypto APIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: bizdev@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing OmniLayerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OmniLayerApiTests : IDisposable
    {
        private OmniLayerApi instance;

        public OmniLayerApiTests()
        {
            instance = new OmniLayerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OmniLayerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OmniLayerApi
            //Assert.IsType<OmniLayerApi>(instance);
        }

        /// <summary>
        /// Test GetOmniTransactionDetailsByTransactionIDTxid
        /// </summary>
        [Fact]
        public void GetOmniTransactionDetailsByTransactionIDTxidTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string network = null;
            //string blockchain = null;
            //string transactionId = null;
            //string context = null;
            //var response = instance.GetOmniTransactionDetailsByTransactionIDTxid(network, blockchain, transactionId, context);
            //Assert.IsType<GetOmniTransactionDetailsByTransactionIDTxidResponse>(response);
        }

        /// <summary>
        /// Test GetUnconfirmedOmniTransactionByTransactionIDTxid
        /// </summary>
        [Fact]
        public void GetUnconfirmedOmniTransactionByTransactionIDTxidTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string network = null;
            //string blockchain = null;
            //string transactionId = null;
            //string context = null;
            //var response = instance.GetUnconfirmedOmniTransactionByTransactionIDTxid(network, blockchain, transactionId, context);
            //Assert.IsType<GetUnconfirmedOmniTransactionByTransactionIDTxidResponse>(response);
        }

        /// <summary>
        /// Test ListOmniTokensByAddress
        /// </summary>
        [Fact]
        public void ListOmniTokensByAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string network = null;
            //string blockchain = null;
            //string address = null;
            //string context = null;
            //var response = instance.ListOmniTokensByAddress(network, blockchain, address, context);
            //Assert.IsType<ListOmniTokensByAddressResponse>(response);
        }

        /// <summary>
        /// Test ListOmniTransactionsByAddress
        /// </summary>
        [Fact]
        public void ListOmniTransactionsByAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string network = null;
            //string blockchain = null;
            //string address = null;
            //string context = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.ListOmniTransactionsByAddress(network, blockchain, address, context, limit, offset);
            //Assert.IsType<ListOmniTransactionsByAddressResponse>(response);
        }

        /// <summary>
        /// Test ListOmniTransactionsByBlockHash
        /// </summary>
        [Fact]
        public void ListOmniTransactionsByBlockHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string network = null;
            //string blockchain = null;
            //string blockHash = null;
            //string context = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.ListOmniTransactionsByBlockHash(network, blockchain, blockHash, context, limit, offset);
            //Assert.IsType<ListOmniTransactionsByBlockHashResponse>(response);
        }

        /// <summary>
        /// Test ListOmniTransactionsByBlockHeight
        /// </summary>
        [Fact]
        public void ListOmniTransactionsByBlockHeightTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string network = null;
            //string blockchain = null;
            //string blockHeight = null;
            //string context = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.ListOmniTransactionsByBlockHeight(network, blockchain, blockHeight, context, limit, offset);
            //Assert.IsType<ListOmniTransactionsByBlockHeightResponse>(response);
        }

        /// <summary>
        /// Test ListUnconfirmedOmniTransactionsByAddress
        /// </summary>
        [Fact]
        public void ListUnconfirmedOmniTransactionsByAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string network = null;
            //string blockchain = null;
            //string address = null;
            //string context = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.ListUnconfirmedOmniTransactionsByAddress(network, blockchain, address, context, limit, offset);
            //Assert.IsType<ListUnconfirmedOmniTransactionsByAddressResponse>(response);
        }

        /// <summary>
        /// Test ListUnconfirmedOmniTransactionsByPropertyID
        /// </summary>
        [Fact]
        public void ListUnconfirmedOmniTransactionsByPropertyIDTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string network = null;
            //string blockchain = null;
            //string propertyId = null;
            //string context = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.ListUnconfirmedOmniTransactionsByPropertyID(network, blockchain, propertyId, context, limit, offset);
            //Assert.IsType<ListUnconfirmedOmniTransactionsByPropertyIDResponse>(response);
        }
    }
}
