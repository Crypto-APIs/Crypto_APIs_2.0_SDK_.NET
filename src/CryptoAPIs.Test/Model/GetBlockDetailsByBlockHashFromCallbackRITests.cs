/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing GetBlockDetailsByBlockHashFromCallbackRI
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetBlockDetailsByBlockHashFromCallbackRITests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetBlockDetailsByBlockHashFromCallbackRI
        //private GetBlockDetailsByBlockHashFromCallbackRI instance;

        public GetBlockDetailsByBlockHashFromCallbackRITests()
        {
            // TODO uncomment below to create an instance of GetBlockDetailsByBlockHashFromCallbackRI
            //instance = new GetBlockDetailsByBlockHashFromCallbackRI();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetBlockDetailsByBlockHashFromCallbackRI
        /// </summary>
        [Fact]
        public void GetBlockDetailsByBlockHashFromCallbackRIInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetBlockDetailsByBlockHashFromCallbackRI
            //Assert.IsType<GetBlockDetailsByBlockHashFromCallbackRI>(instance);
        }


        /// <summary>
        /// Test the property 'Hash'
        /// </summary>
        [Fact]
        public void HashTest()
        {
            // TODO unit test for the property 'Hash'
        }
        /// <summary>
        /// Test the property 'Height'
        /// </summary>
        [Fact]
        public void HeightTest()
        {
            // TODO unit test for the property 'Height'
        }
        /// <summary>
        /// Test the property 'PreviousBlockHash'
        /// </summary>
        [Fact]
        public void PreviousBlockHashTest()
        {
            // TODO unit test for the property 'PreviousBlockHash'
        }
        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Fact]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }
        /// <summary>
        /// Test the property 'TransactionsCount'
        /// </summary>
        [Fact]
        public void TransactionsCountTest()
        {
            // TODO unit test for the property 'TransactionsCount'
        }
        /// <summary>
        /// Test the property 'Difficulty'
        /// </summary>
        [Fact]
        public void DifficultyTest()
        {
            // TODO unit test for the property 'Difficulty'
        }
        /// <summary>
        /// Test the property 'ExtraData'
        /// </summary>
        [Fact]
        public void ExtraDataTest()
        {
            // TODO unit test for the property 'ExtraData'
        }
        /// <summary>
        /// Test the property 'GasLimit'
        /// </summary>
        [Fact]
        public void GasLimitTest()
        {
            // TODO unit test for the property 'GasLimit'
        }
        /// <summary>
        /// Test the property 'GasUsed'
        /// </summary>
        [Fact]
        public void GasUsedTest()
        {
            // TODO unit test for the property 'GasUsed'
        }
        /// <summary>
        /// Test the property 'MinedInSeconds'
        /// </summary>
        [Fact]
        public void MinedInSecondsTest()
        {
            // TODO unit test for the property 'MinedInSeconds'
        }
        /// <summary>
        /// Test the property 'Nonce'
        /// </summary>
        [Fact]
        public void NonceTest()
        {
            // TODO unit test for the property 'Nonce'
        }
        /// <summary>
        /// Test the property 'Sha3Uncles'
        /// </summary>
        [Fact]
        public void Sha3UnclesTest()
        {
            // TODO unit test for the property 'Sha3Uncles'
        }
        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }
        /// <summary>
        /// Test the property 'TotalDifficulty'
        /// </summary>
        [Fact]
        public void TotalDifficultyTest()
        {
            // TODO unit test for the property 'TotalDifficulty'
        }
        /// <summary>
        /// Test the property 'Uncles'
        /// </summary>
        [Fact]
        public void UnclesTest()
        {
            // TODO unit test for the property 'Uncles'
        }
        /// <summary>
        /// Test the property 'BlockchainSpecific'
        /// </summary>
        [Fact]
        public void BlockchainSpecificTest()
        {
            // TODO unit test for the property 'BlockchainSpecific'
        }

    }

}
