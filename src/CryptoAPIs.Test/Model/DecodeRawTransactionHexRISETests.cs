/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing DecodeRawTransactionHexRISE
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DecodeRawTransactionHexRISETests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DecodeRawTransactionHexRISE
        //private DecodeRawTransactionHexRISE instance;

        public DecodeRawTransactionHexRISETests()
        {
            // TODO uncomment below to create an instance of DecodeRawTransactionHexRISE
            //instance = new DecodeRawTransactionHexRISE();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DecodeRawTransactionHexRISE
        /// </summary>
        [Fact]
        public void DecodeRawTransactionHexRISEInstanceTest()
        {
            // TODO uncomment below to test "IsType" DecodeRawTransactionHexRISE
            //Assert.IsType<DecodeRawTransactionHexRISE>(instance);
        }


        /// <summary>
        /// Test the property 'ApproximateFee'
        /// </summary>
        [Fact]
        public void ApproximateFeeTest()
        {
            // TODO unit test for the property 'ApproximateFee'
        }
        /// <summary>
        /// Test the property 'ApproximateMinimumRequiredFee'
        /// </summary>
        [Fact]
        public void ApproximateMinimumRequiredFeeTest()
        {
            // TODO unit test for the property 'ApproximateMinimumRequiredFee'
        }
        /// <summary>
        /// Test the property 'GasLimit'
        /// </summary>
        [Fact]
        public void GasLimitTest()
        {
            // TODO unit test for the property 'GasLimit'
        }
        /// <summary>
        /// Test the property 'GasPaidForData'
        /// </summary>
        [Fact]
        public void GasPaidForDataTest()
        {
            // TODO unit test for the property 'GasPaidForData'
        }
        /// <summary>
        /// Test the property 'GasPrice'
        /// </summary>
        [Fact]
        public void GasPriceTest()
        {
            // TODO unit test for the property 'GasPrice'
        }
        /// <summary>
        /// Test the property 'InputData'
        /// </summary>
        [Fact]
        public void InputDataTest()
        {
            // TODO unit test for the property 'InputData'
        }
        /// <summary>
        /// Test the property 'MaxFeePerGas'
        /// </summary>
        [Fact]
        public void MaxFeePerGasTest()
        {
            // TODO unit test for the property 'MaxFeePerGas'
        }
        /// <summary>
        /// Test the property 'MaxFeePriorityPerGas'
        /// </summary>
        [Fact]
        public void MaxFeePriorityPerGasTest()
        {
            // TODO unit test for the property 'MaxFeePriorityPerGas'
        }
        /// <summary>
        /// Test the property 'Nonce'
        /// </summary>
        [Fact]
        public void NonceTest()
        {
            // TODO unit test for the property 'Nonce'
        }
        /// <summary>
        /// Test the property 'R'
        /// </summary>
        [Fact]
        public void RTest()
        {
            // TODO unit test for the property 'R'
        }
        /// <summary>
        /// Test the property 'Recipient'
        /// </summary>
        [Fact]
        public void RecipientTest()
        {
            // TODO unit test for the property 'Recipient'
        }
        /// <summary>
        /// Test the property 'S'
        /// </summary>
        [Fact]
        public void STest()
        {
            // TODO unit test for the property 'S'
        }
        /// <summary>
        /// Test the property 'Sender'
        /// </summary>
        [Fact]
        public void SenderTest()
        {
            // TODO unit test for the property 'Sender'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'V'
        /// </summary>
        [Fact]
        public void VTest()
        {
            // TODO unit test for the property 'V'
        }
        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Fact]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }

    }

}
