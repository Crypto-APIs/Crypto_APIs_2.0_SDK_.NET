/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing GetWalletTransactionDetailsByTransactionIDRIBSZ
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetWalletTransactionDetailsByTransactionIDRIBSZTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetWalletTransactionDetailsByTransactionIDRIBSZ
        //private GetWalletTransactionDetailsByTransactionIDRIBSZ instance;

        public GetWalletTransactionDetailsByTransactionIDRIBSZTests()
        {
            // TODO uncomment below to create an instance of GetWalletTransactionDetailsByTransactionIDRIBSZ
            //instance = new GetWalletTransactionDetailsByTransactionIDRIBSZ();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetWalletTransactionDetailsByTransactionIDRIBSZ
        /// </summary>
        [Fact]
        public void GetWalletTransactionDetailsByTransactionIDRIBSZInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetWalletTransactionDetailsByTransactionIDRIBSZ
            //Assert.IsType<GetWalletTransactionDetailsByTransactionIDRIBSZ>(instance);
        }


        /// <summary>
        /// Test the property 'BindingSig'
        /// </summary>
        [Fact]
        public void BindingSigTest()
        {
            // TODO unit test for the property 'BindingSig'
        }
        /// <summary>
        /// Test the property 'ExpiryHeight'
        /// </summary>
        [Fact]
        public void ExpiryHeightTest()
        {
            // TODO unit test for the property 'ExpiryHeight'
        }
        /// <summary>
        /// Test the property 'JoinSplitPubKey'
        /// </summary>
        [Fact]
        public void JoinSplitPubKeyTest()
        {
            // TODO unit test for the property 'JoinSplitPubKey'
        }
        /// <summary>
        /// Test the property 'JoinSplitSig'
        /// </summary>
        [Fact]
        public void JoinSplitSigTest()
        {
            // TODO unit test for the property 'JoinSplitSig'
        }
        /// <summary>
        /// Test the property 'Locktime'
        /// </summary>
        [Fact]
        public void LocktimeTest()
        {
            // TODO unit test for the property 'Locktime'
        }
        /// <summary>
        /// Test the property 'Overwintered'
        /// </summary>
        [Fact]
        public void OverwinteredTest()
        {
            // TODO unit test for the property 'Overwintered'
        }
        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }
        /// <summary>
        /// Test the property 'VJoinSplit'
        /// </summary>
        [Fact]
        public void VJoinSplitTest()
        {
            // TODO unit test for the property 'VJoinSplit'
        }
        /// <summary>
        /// Test the property 'VShieldedOutput'
        /// </summary>
        [Fact]
        public void VShieldedOutputTest()
        {
            // TODO unit test for the property 'VShieldedOutput'
        }
        /// <summary>
        /// Test the property 'VShieldedSpend'
        /// </summary>
        [Fact]
        public void VShieldedSpendTest()
        {
            // TODO unit test for the property 'VShieldedSpend'
        }
        /// <summary>
        /// Test the property 'ValueBalance'
        /// </summary>
        [Fact]
        public void ValueBalanceTest()
        {
            // TODO unit test for the property 'ValueBalance'
        }
        /// <summary>
        /// Test the property '_Version'
        /// </summary>
        [Fact]
        public void _VersionTest()
        {
            // TODO unit test for the property '_Version'
        }
        /// <summary>
        /// Test the property 'VersionGroupId'
        /// </summary>
        [Fact]
        public void VersionGroupIdTest()
        {
            // TODO unit test for the property 'VersionGroupId'
        }
        /// <summary>
        /// Test the property 'Vin'
        /// </summary>
        [Fact]
        public void VinTest()
        {
            // TODO unit test for the property 'Vin'
        }
        /// <summary>
        /// Test the property 'Vout'
        /// </summary>
        [Fact]
        public void VoutTest()
        {
            // TODO unit test for the property 'Vout'
        }

    }

}
