/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing ListTokensTransfersByTransactionHashRI
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ListTokensTransfersByTransactionHashRITests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ListTokensTransfersByTransactionHashRI
        //private ListTokensTransfersByTransactionHashRI instance;

        public ListTokensTransfersByTransactionHashRITests()
        {
            // TODO uncomment below to create an instance of ListTokensTransfersByTransactionHashRI
            //instance = new ListTokensTransfersByTransactionHashRI();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ListTokensTransfersByTransactionHashRI
        /// </summary>
        [Fact]
        public void ListTokensTransfersByTransactionHashRIInstanceTest()
        {
            // TODO uncomment below to test "IsType" ListTokensTransfersByTransactionHashRI
            //Assert.IsType<ListTokensTransfersByTransactionHashRI>(instance);
        }


        /// <summary>
        /// Test the property 'ContractAddress'
        /// </summary>
        [Fact]
        public void ContractAddressTest()
        {
            // TODO unit test for the property 'ContractAddress'
        }
        /// <summary>
        /// Test the property 'MinedInBlockHeight'
        /// </summary>
        [Fact]
        public void MinedInBlockHeightTest()
        {
            // TODO unit test for the property 'MinedInBlockHeight'
        }
        /// <summary>
        /// Test the property 'RecipientAddress'
        /// </summary>
        [Fact]
        public void RecipientAddressTest()
        {
            // TODO unit test for the property 'RecipientAddress'
        }
        /// <summary>
        /// Test the property 'SenderAddress'
        /// </summary>
        [Fact]
        public void SenderAddressTest()
        {
            // TODO unit test for the property 'SenderAddress'
        }
        /// <summary>
        /// Test the property 'TokenDecimals'
        /// </summary>
        [Fact]
        public void TokenDecimalsTest()
        {
            // TODO unit test for the property 'TokenDecimals'
        }
        /// <summary>
        /// Test the property 'TokenName'
        /// </summary>
        [Fact]
        public void TokenNameTest()
        {
            // TODO unit test for the property 'TokenName'
        }
        /// <summary>
        /// Test the property 'TokenSymbol'
        /// </summary>
        [Fact]
        public void TokenSymbolTest()
        {
            // TODO unit test for the property 'TokenSymbol'
        }
        /// <summary>
        /// Test the property 'TokenType'
        /// </summary>
        [Fact]
        public void TokenTypeTest()
        {
            // TODO unit test for the property 'TokenType'
        }
        /// <summary>
        /// Test the property 'TokensAmount'
        /// </summary>
        [Fact]
        public void TokensAmountTest()
        {
            // TODO unit test for the property 'TokensAmount'
        }
        /// <summary>
        /// Test the property 'TransactionHash'
        /// </summary>
        [Fact]
        public void TransactionHashTest()
        {
            // TODO unit test for the property 'TransactionHash'
        }
        /// <summary>
        /// Test the property 'TransactionTimestamp'
        /// </summary>
        [Fact]
        public void TransactionTimestampTest()
        {
            // TODO unit test for the property 'TransactionTimestamp'
        }

    }

}
