/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing GetBlockDetailsByBlockHeightRIBSEC
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetBlockDetailsByBlockHeightRIBSECTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetBlockDetailsByBlockHeightRIBSEC
        //private GetBlockDetailsByBlockHeightRIBSEC instance;

        public GetBlockDetailsByBlockHeightRIBSECTests()
        {
            // TODO uncomment below to create an instance of GetBlockDetailsByBlockHeightRIBSEC
            //instance = new GetBlockDetailsByBlockHeightRIBSEC();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetBlockDetailsByBlockHeightRIBSEC
        /// </summary>
        [Fact]
        public void GetBlockDetailsByBlockHeightRIBSECInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetBlockDetailsByBlockHeightRIBSEC
            //Assert.IsType<GetBlockDetailsByBlockHeightRIBSEC>(instance);
        }


        /// <summary>
        /// Test the property 'Difficulty'
        /// </summary>
        [Fact]
        public void DifficultyTest()
        {
            // TODO unit test for the property 'Difficulty'
        }
        /// <summary>
        /// Test the property 'ExtraData'
        /// </summary>
        [Fact]
        public void ExtraDataTest()
        {
            // TODO unit test for the property 'ExtraData'
        }
        /// <summary>
        /// Test the property 'GasLimit'
        /// </summary>
        [Fact]
        public void GasLimitTest()
        {
            // TODO unit test for the property 'GasLimit'
        }
        /// <summary>
        /// Test the property 'GasUsed'
        /// </summary>
        [Fact]
        public void GasUsedTest()
        {
            // TODO unit test for the property 'GasUsed'
        }
        /// <summary>
        /// Test the property 'MinedInSeconds'
        /// </summary>
        [Fact]
        public void MinedInSecondsTest()
        {
            // TODO unit test for the property 'MinedInSeconds'
        }
        /// <summary>
        /// Test the property 'Nonce'
        /// </summary>
        [Fact]
        public void NonceTest()
        {
            // TODO unit test for the property 'Nonce'
        }
        /// <summary>
        /// Test the property 'Sha3Uncles'
        /// </summary>
        [Fact]
        public void Sha3UnclesTest()
        {
            // TODO unit test for the property 'Sha3Uncles'
        }
        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }
        /// <summary>
        /// Test the property 'TotalDifficulty'
        /// </summary>
        [Fact]
        public void TotalDifficultyTest()
        {
            // TODO unit test for the property 'TotalDifficulty'
        }

    }

}
