/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing GetWalletTransactionDetailsByTransactionIDRIBST
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetWalletTransactionDetailsByTransactionIDRIBSTTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetWalletTransactionDetailsByTransactionIDRIBST
        //private GetWalletTransactionDetailsByTransactionIDRIBST instance;

        public GetWalletTransactionDetailsByTransactionIDRIBSTTests()
        {
            // TODO uncomment below to create an instance of GetWalletTransactionDetailsByTransactionIDRIBST
            //instance = new GetWalletTransactionDetailsByTransactionIDRIBST();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetWalletTransactionDetailsByTransactionIDRIBST
        /// </summary>
        [Fact]
        public void GetWalletTransactionDetailsByTransactionIDRIBSTInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetWalletTransactionDetailsByTransactionIDRIBST
            //Assert.IsType<GetWalletTransactionDetailsByTransactionIDRIBST>(instance);
        }


        /// <summary>
        /// Test the property 'Amount'
        /// </summary>
        [Fact]
        public void AmountTest()
        {
            // TODO unit test for the property 'Amount'
        }
        /// <summary>
        /// Test the property 'BandwidthUsed'
        /// </summary>
        [Fact]
        public void BandwidthUsedTest()
        {
            // TODO unit test for the property 'BandwidthUsed'
        }
        /// <summary>
        /// Test the property 'Contract'
        /// </summary>
        [Fact]
        public void ContractTest()
        {
            // TODO unit test for the property 'Contract'
        }
        /// <summary>
        /// Test the property 'EnergyUsed'
        /// </summary>
        [Fact]
        public void EnergyUsedTest()
        {
            // TODO unit test for the property 'EnergyUsed'
        }
        /// <summary>
        /// Test the property 'HasInternalTransactions'
        /// </summary>
        [Fact]
        public void HasInternalTransactionsTest()
        {
            // TODO unit test for the property 'HasInternalTransactions'
        }
        /// <summary>
        /// Test the property 'HasTokenTransfers'
        /// </summary>
        [Fact]
        public void HasTokenTransfersTest()
        {
            // TODO unit test for the property 'HasTokenTransfers'
        }
        /// <summary>
        /// Test the property 'Input'
        /// </summary>
        [Fact]
        public void InputTest()
        {
            // TODO unit test for the property 'Input'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

    }

}
