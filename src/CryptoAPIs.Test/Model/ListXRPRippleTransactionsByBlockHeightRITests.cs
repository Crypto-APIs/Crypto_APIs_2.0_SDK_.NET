/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing ListXRPRippleTransactionsByBlockHeightRI
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ListXRPRippleTransactionsByBlockHeightRITests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ListXRPRippleTransactionsByBlockHeightRI
        //private ListXRPRippleTransactionsByBlockHeightRI instance;

        public ListXRPRippleTransactionsByBlockHeightRITests()
        {
            // TODO uncomment below to create an instance of ListXRPRippleTransactionsByBlockHeightRI
            //instance = new ListXRPRippleTransactionsByBlockHeightRI();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ListXRPRippleTransactionsByBlockHeightRI
        /// </summary>
        [Fact]
        public void ListXRPRippleTransactionsByBlockHeightRIInstanceTest()
        {
            // TODO uncomment below to test "IsType" ListXRPRippleTransactionsByBlockHeightRI
            //Assert.IsType<ListXRPRippleTransactionsByBlockHeightRI>(instance);
        }


        /// <summary>
        /// Test the property 'AdditionalData'
        /// </summary>
        [Fact]
        public void AdditionalDataTest()
        {
            // TODO unit test for the property 'AdditionalData'
        }
        /// <summary>
        /// Test the property 'DestinationTag'
        /// </summary>
        [Fact]
        public void DestinationTagTest()
        {
            // TODO unit test for the property 'DestinationTag'
        }
        /// <summary>
        /// Test the property 'Index'
        /// </summary>
        [Fact]
        public void IndexTest()
        {
            // TODO unit test for the property 'Index'
        }
        /// <summary>
        /// Test the property 'MinedInBlockHash'
        /// </summary>
        [Fact]
        public void MinedInBlockHashTest()
        {
            // TODO unit test for the property 'MinedInBlockHash'
        }
        /// <summary>
        /// Test the property 'Recipients'
        /// </summary>
        [Fact]
        public void RecipientsTest()
        {
            // TODO unit test for the property 'Recipients'
        }
        /// <summary>
        /// Test the property 'Senders'
        /// </summary>
        [Fact]
        public void SendersTest()
        {
            // TODO unit test for the property 'Senders'
        }
        /// <summary>
        /// Test the property 'Sequence'
        /// </summary>
        [Fact]
        public void SequenceTest()
        {
            // TODO unit test for the property 'Sequence'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Fact]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }
        /// <summary>
        /// Test the property 'TransactionHash'
        /// </summary>
        [Fact]
        public void TransactionHashTest()
        {
            // TODO unit test for the property 'TransactionHash'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Fee'
        /// </summary>
        [Fact]
        public void FeeTest()
        {
            // TODO unit test for the property 'Fee'
        }
        /// <summary>
        /// Test the property 'Offer'
        /// </summary>
        [Fact]
        public void OfferTest()
        {
            // TODO unit test for the property 'Offer'
        }
        /// <summary>
        /// Test the property 'Receive'
        /// </summary>
        [Fact]
        public void ReceiveTest()
        {
            // TODO unit test for the property 'Receive'
        }
        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Fact]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }

    }

}
