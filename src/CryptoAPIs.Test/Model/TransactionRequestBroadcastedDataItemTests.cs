/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing TransactionRequestBroadcastedDataItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TransactionRequestBroadcastedDataItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TransactionRequestBroadcastedDataItem
        //private TransactionRequestBroadcastedDataItem instance;

        public TransactionRequestBroadcastedDataItemTests()
        {
            // TODO uncomment below to create an instance of TransactionRequestBroadcastedDataItem
            //instance = new TransactionRequestBroadcastedDataItem();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TransactionRequestBroadcastedDataItem
        /// </summary>
        [Fact]
        public void TransactionRequestBroadcastedDataItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" TransactionRequestBroadcastedDataItem
            //Assert.IsType<TransactionRequestBroadcastedDataItem>(instance);
        }


        /// <summary>
        /// Test the property 'Blockchain'
        /// </summary>
        [Fact]
        public void BlockchainTest()
        {
            // TODO unit test for the property 'Blockchain'
        }
        /// <summary>
        /// Test the property 'Network'
        /// </summary>
        [Fact]
        public void NetworkTest()
        {
            // TODO unit test for the property 'Network'
        }
        /// <summary>
        /// Test the property 'RequiredApproves'
        /// </summary>
        [Fact]
        public void RequiredApprovesTest()
        {
            // TODO unit test for the property 'RequiredApproves'
        }
        /// <summary>
        /// Test the property 'RequiredRejects'
        /// </summary>
        [Fact]
        public void RequiredRejectsTest()
        {
            // TODO unit test for the property 'RequiredRejects'
        }
        /// <summary>
        /// Test the property 'CurrentApproves'
        /// </summary>
        [Fact]
        public void CurrentApprovesTest()
        {
            // TODO unit test for the property 'CurrentApproves'
        }
        /// <summary>
        /// Test the property 'CurrentRejects'
        /// </summary>
        [Fact]
        public void CurrentRejectsTest()
        {
            // TODO unit test for the property 'CurrentRejects'
        }
        /// <summary>
        /// Test the property 'TransactionId'
        /// </summary>
        [Fact]
        public void TransactionIdTest()
        {
            // TODO unit test for the property 'TransactionId'
        }

    }

}
