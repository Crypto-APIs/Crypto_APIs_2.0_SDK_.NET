/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing GetEIP1559FeeRecommendationsRIMaxFeePerGas
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetEIP1559FeeRecommendationsRIMaxFeePerGasTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetEIP1559FeeRecommendationsRIMaxFeePerGas
        //private GetEIP1559FeeRecommendationsRIMaxFeePerGas instance;

        public GetEIP1559FeeRecommendationsRIMaxFeePerGasTests()
        {
            // TODO uncomment below to create an instance of GetEIP1559FeeRecommendationsRIMaxFeePerGas
            //instance = new GetEIP1559FeeRecommendationsRIMaxFeePerGas();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetEIP1559FeeRecommendationsRIMaxFeePerGas
        /// </summary>
        [Fact]
        public void GetEIP1559FeeRecommendationsRIMaxFeePerGasInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetEIP1559FeeRecommendationsRIMaxFeePerGas
            //Assert.IsType<GetEIP1559FeeRecommendationsRIMaxFeePerGas>(instance);
        }


        /// <summary>
        /// Test the property 'Fast'
        /// </summary>
        [Fact]
        public void FastTest()
        {
            // TODO unit test for the property 'Fast'
        }
        /// <summary>
        /// Test the property 'Slow'
        /// </summary>
        [Fact]
        public void SlowTest()
        {
            // TODO unit test for the property 'Slow'
        }
        /// <summary>
        /// Test the property 'Standard'
        /// </summary>
        [Fact]
        public void StandardTest()
        {
            // TODO unit test for the property 'Standard'
        }
        /// <summary>
        /// Test the property 'Unit'
        /// </summary>
        [Fact]
        public void UnitTest()
        {
            // TODO unit test for the property 'Unit'
        }

    }

}
