/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing AddressCoinsTransactionConfirmedEachConfirmationDataItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AddressCoinsTransactionConfirmedEachConfirmationDataItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AddressCoinsTransactionConfirmedEachConfirmationDataItem
        //private AddressCoinsTransactionConfirmedEachConfirmationDataItem instance;

        public AddressCoinsTransactionConfirmedEachConfirmationDataItemTests()
        {
            // TODO uncomment below to create an instance of AddressCoinsTransactionConfirmedEachConfirmationDataItem
            //instance = new AddressCoinsTransactionConfirmedEachConfirmationDataItem();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AddressCoinsTransactionConfirmedEachConfirmationDataItem
        /// </summary>
        [Fact]
        public void AddressCoinsTransactionConfirmedEachConfirmationDataItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" AddressCoinsTransactionConfirmedEachConfirmationDataItem
            //Assert.IsType<AddressCoinsTransactionConfirmedEachConfirmationDataItem>(instance);
        }


        /// <summary>
        /// Test the property 'Blockchain'
        /// </summary>
        [Fact]
        public void BlockchainTest()
        {
            // TODO unit test for the property 'Blockchain'
        }
        /// <summary>
        /// Test the property 'Network'
        /// </summary>
        [Fact]
        public void NetworkTest()
        {
            // TODO unit test for the property 'Network'
        }
        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Fact]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }
        /// <summary>
        /// Test the property 'MinedInBlock'
        /// </summary>
        [Fact]
        public void MinedInBlockTest()
        {
            // TODO unit test for the property 'MinedInBlock'
        }
        /// <summary>
        /// Test the property 'TransactionId'
        /// </summary>
        [Fact]
        public void TransactionIdTest()
        {
            // TODO unit test for the property 'TransactionId'
        }
        /// <summary>
        /// Test the property 'CurrentConfirmations'
        /// </summary>
        [Fact]
        public void CurrentConfirmationsTest()
        {
            // TODO unit test for the property 'CurrentConfirmations'
        }
        /// <summary>
        /// Test the property 'TargetConfirmations'
        /// </summary>
        [Fact]
        public void TargetConfirmationsTest()
        {
            // TODO unit test for the property 'TargetConfirmations'
        }
        /// <summary>
        /// Test the property 'Amount'
        /// </summary>
        [Fact]
        public void AmountTest()
        {
            // TODO unit test for the property 'Amount'
        }
        /// <summary>
        /// Test the property 'Unit'
        /// </summary>
        [Fact]
        public void UnitTest()
        {
            // TODO unit test for the property 'Unit'
        }
        /// <summary>
        /// Test the property 'Direction'
        /// </summary>
        [Fact]
        public void DirectionTest()
        {
            // TODO unit test for the property 'Direction'
        }

    }

}
