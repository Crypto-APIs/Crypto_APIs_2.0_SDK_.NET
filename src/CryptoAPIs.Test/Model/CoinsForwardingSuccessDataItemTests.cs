/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing CoinsForwardingSuccessDataItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CoinsForwardingSuccessDataItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CoinsForwardingSuccessDataItem
        //private CoinsForwardingSuccessDataItem instance;

        public CoinsForwardingSuccessDataItemTests()
        {
            // TODO uncomment below to create an instance of CoinsForwardingSuccessDataItem
            //instance = new CoinsForwardingSuccessDataItem();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CoinsForwardingSuccessDataItem
        /// </summary>
        [Fact]
        public void CoinsForwardingSuccessDataItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" CoinsForwardingSuccessDataItem
            //Assert.IsType<CoinsForwardingSuccessDataItem>(instance);
        }


        /// <summary>
        /// Test the property 'Blockchain'
        /// </summary>
        [Fact]
        public void BlockchainTest()
        {
            // TODO unit test for the property 'Blockchain'
        }
        /// <summary>
        /// Test the property 'Network'
        /// </summary>
        [Fact]
        public void NetworkTest()
        {
            // TODO unit test for the property 'Network'
        }
        /// <summary>
        /// Test the property 'FromAddress'
        /// </summary>
        [Fact]
        public void FromAddressTest()
        {
            // TODO unit test for the property 'FromAddress'
        }
        /// <summary>
        /// Test the property 'ToAddress'
        /// </summary>
        [Fact]
        public void ToAddressTest()
        {
            // TODO unit test for the property 'ToAddress'
        }
        /// <summary>
        /// Test the property 'ForwardedAmount'
        /// </summary>
        [Fact]
        public void ForwardedAmountTest()
        {
            // TODO unit test for the property 'ForwardedAmount'
        }
        /// <summary>
        /// Test the property 'ForwardedUnit'
        /// </summary>
        [Fact]
        public void ForwardedUnitTest()
        {
            // TODO unit test for the property 'ForwardedUnit'
        }
        /// <summary>
        /// Test the property 'SpentFeesAmount'
        /// </summary>
        [Fact]
        public void SpentFeesAmountTest()
        {
            // TODO unit test for the property 'SpentFeesAmount'
        }
        /// <summary>
        /// Test the property 'SpentFeesUnit'
        /// </summary>
        [Fact]
        public void SpentFeesUnitTest()
        {
            // TODO unit test for the property 'SpentFeesUnit'
        }
        /// <summary>
        /// Test the property 'TriggerTransactionId'
        /// </summary>
        [Fact]
        public void TriggerTransactionIdTest()
        {
            // TODO unit test for the property 'TriggerTransactionId'
        }
        /// <summary>
        /// Test the property 'ForwardingTransactionId'
        /// </summary>
        [Fact]
        public void ForwardingTransactionIdTest()
        {
            // TODO unit test for the property 'ForwardingTransactionId'
        }

    }

}
