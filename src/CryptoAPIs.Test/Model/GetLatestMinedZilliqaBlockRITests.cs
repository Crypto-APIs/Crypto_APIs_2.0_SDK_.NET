/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CryptoAPIs.Api;
using CryptoAPIs.Model;
using CryptoAPIs.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CryptoAPIs.Test.Model
{
    /// <summary>
    ///  Class for testing GetLatestMinedZilliqaBlockRI
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetLatestMinedZilliqaBlockRITests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetLatestMinedZilliqaBlockRI
        //private GetLatestMinedZilliqaBlockRI instance;

        public GetLatestMinedZilliqaBlockRITests()
        {
            // TODO uncomment below to create an instance of GetLatestMinedZilliqaBlockRI
            //instance = new GetLatestMinedZilliqaBlockRI();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetLatestMinedZilliqaBlockRI
        /// </summary>
        [Fact]
        public void GetLatestMinedZilliqaBlockRIInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetLatestMinedZilliqaBlockRI
            //Assert.IsType<GetLatestMinedZilliqaBlockRI>(instance);
        }


        /// <summary>
        /// Test the property 'BlockHash'
        /// </summary>
        [Fact]
        public void BlockHashTest()
        {
            // TODO unit test for the property 'BlockHash'
        }
        /// <summary>
        /// Test the property 'BlockHeight'
        /// </summary>
        [Fact]
        public void BlockHeightTest()
        {
            // TODO unit test for the property 'BlockHeight'
        }
        /// <summary>
        /// Test the property 'Difficulty'
        /// </summary>
        [Fact]
        public void DifficultyTest()
        {
            // TODO unit test for the property 'Difficulty'
        }
        /// <summary>
        /// Test the property 'DsBlock'
        /// </summary>
        [Fact]
        public void DsBlockTest()
        {
            // TODO unit test for the property 'DsBlock'
        }
        /// <summary>
        /// Test the property 'DsDifficulty'
        /// </summary>
        [Fact]
        public void DsDifficultyTest()
        {
            // TODO unit test for the property 'DsDifficulty'
        }
        /// <summary>
        /// Test the property 'DsLeader'
        /// </summary>
        [Fact]
        public void DsLeaderTest()
        {
            // TODO unit test for the property 'DsLeader'
        }
        /// <summary>
        /// Test the property 'GasLimit'
        /// </summary>
        [Fact]
        public void GasLimitTest()
        {
            // TODO unit test for the property 'GasLimit'
        }
        /// <summary>
        /// Test the property 'GasUsed'
        /// </summary>
        [Fact]
        public void GasUsedTest()
        {
            // TODO unit test for the property 'GasUsed'
        }
        /// <summary>
        /// Test the property 'MicroBlocks'
        /// </summary>
        [Fact]
        public void MicroBlocksTest()
        {
            // TODO unit test for the property 'MicroBlocks'
        }
        /// <summary>
        /// Test the property 'PreviousBlockHash'
        /// </summary>
        [Fact]
        public void PreviousBlockHashTest()
        {
            // TODO unit test for the property 'PreviousBlockHash'
        }
        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Fact]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }
        /// <summary>
        /// Test the property 'TransactionsCount'
        /// </summary>
        [Fact]
        public void TransactionsCountTest()
        {
            // TODO unit test for the property 'TransactionsCount'
        }

    }

}
