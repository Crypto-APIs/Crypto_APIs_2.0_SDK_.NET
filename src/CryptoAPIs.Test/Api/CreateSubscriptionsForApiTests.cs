/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CryptoAPIs.Client;
using CryptoAPIs.Api;
// uncomment below to import models
//using CryptoAPIs.Model;

namespace CryptoAPIs.Test.Api
{
    /// <summary>
    ///  Class for testing CreateSubscriptionsForApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CreateSubscriptionsForApiTests : IDisposable
    {
        private CreateSubscriptionsForApi instance;

        public CreateSubscriptionsForApiTests()
        {
            instance = new CreateSubscriptionsForApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreateSubscriptionsForApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CreateSubscriptionsForApi
            //Assert.IsType<CreateSubscriptionsForApi>(instance);
        }

        /// <summary>
        /// Test MinedTransaction
        /// </summary>
        [Fact]
        public void MinedTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //MinedTransactionRB minedTransactionRB = null;
            //var response = instance.MinedTransaction(blockchain, network, context, minedTransactionRB);
            //Assert.IsType<MinedTransactionR>(response);
        }

        /// <summary>
        /// Test NewBlock
        /// </summary>
        [Fact]
        public void NewBlockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewBlockRB newBlockRB = null;
            //var response = instance.NewBlock(blockchain, network, context, newBlockRB);
            //Assert.IsType<NewBlockR>(response);
        }

        /// <summary>
        /// Test NewConfirmedCoinsTransactions
        /// </summary>
        [Fact]
        public void NewConfirmedCoinsTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewConfirmedCoinsTransactionsRB newConfirmedCoinsTransactionsRB = null;
            //var response = instance.NewConfirmedCoinsTransactions(blockchain, network, context, newConfirmedCoinsTransactionsRB);
            //Assert.IsType<NewConfirmedCoinsTransactionsR>(response);
        }

        /// <summary>
        /// Test NewConfirmedCoinsTransactionsAndEachConfirmation
        /// </summary>
        [Fact]
        public void NewConfirmedCoinsTransactionsAndEachConfirmationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewConfirmedCoinsTransactionsAndEachConfirmationRB newConfirmedCoinsTransactionsAndEachConfirmationRB = null;
            //var response = instance.NewConfirmedCoinsTransactionsAndEachConfirmation(blockchain, network, context, newConfirmedCoinsTransactionsAndEachConfirmationRB);
            //Assert.IsType<NewConfirmedCoinsTransactionsAndEachConfirmationR>(response);
        }

        /// <summary>
        /// Test NewConfirmedCoinsTransactionsForSpecificAmount
        /// </summary>
        [Fact]
        public void NewConfirmedCoinsTransactionsForSpecificAmountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewConfirmedCoinsTransactionsForSpecificAmountRB newConfirmedCoinsTransactionsForSpecificAmountRB = null;
            //var response = instance.NewConfirmedCoinsTransactionsForSpecificAmount(blockchain, network, context, newConfirmedCoinsTransactionsForSpecificAmountRB);
            //Assert.IsType<NewConfirmedCoinsTransactionsForSpecificAmountR>(response);
        }

        /// <summary>
        /// Test NewConfirmedInternalTransactions
        /// </summary>
        [Fact]
        public void NewConfirmedInternalTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewConfirmedInternalTransactionsRB newConfirmedInternalTransactionsRB = null;
            //var response = instance.NewConfirmedInternalTransactions(blockchain, network, context, newConfirmedInternalTransactionsRB);
            //Assert.IsType<NewConfirmedInternalTransactionsR>(response);
        }

        /// <summary>
        /// Test NewConfirmedInternalTransactionsAndEachConfirmation
        /// </summary>
        [Fact]
        public void NewConfirmedInternalTransactionsAndEachConfirmationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewConfirmedInternalTransactionsAndEachConfirmationRB newConfirmedInternalTransactionsAndEachConfirmationRB = null;
            //var response = instance.NewConfirmedInternalTransactionsAndEachConfirmation(blockchain, network, context, newConfirmedInternalTransactionsAndEachConfirmationRB);
            //Assert.IsType<NewConfirmedInternalTransactionsAndEachConfirmationR>(response);
        }

        /// <summary>
        /// Test NewConfirmedInternalTransactionsForSpecificAmount
        /// </summary>
        [Fact]
        public void NewConfirmedInternalTransactionsForSpecificAmountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewConfirmedInternalTransactionsForSpecificAmountRB newConfirmedInternalTransactionsForSpecificAmountRB = null;
            //var response = instance.NewConfirmedInternalTransactionsForSpecificAmount(blockchain, network, context, newConfirmedInternalTransactionsForSpecificAmountRB);
            //Assert.IsType<NewConfirmedInternalTransactionsForSpecificAmountR>(response);
        }

        /// <summary>
        /// Test NewConfirmedTokenTransactionsForSpecificAmount
        /// </summary>
        [Fact]
        public void NewConfirmedTokenTransactionsForSpecificAmountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewConfirmedTokenTransactionsForSpecificAmountRB newConfirmedTokenTransactionsForSpecificAmountRB = null;
            //var response = instance.NewConfirmedTokenTransactionsForSpecificAmount(blockchain, network, context, newConfirmedTokenTransactionsForSpecificAmountRB);
            //Assert.IsType<NewConfirmedTokenTransactionsForSpecificAmountR>(response);
        }

        /// <summary>
        /// Test NewConfirmedTokensTransactions
        /// </summary>
        [Fact]
        public void NewConfirmedTokensTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewConfirmedTokensTransactionsRB newConfirmedTokensTransactionsRB = null;
            //var response = instance.NewConfirmedTokensTransactions(blockchain, network, context, newConfirmedTokensTransactionsRB);
            //Assert.IsType<NewConfirmedTokensTransactionsR>(response);
        }

        /// <summary>
        /// Test NewConfirmedTokensTransactionsAndEachConfirmation
        /// </summary>
        [Fact]
        public void NewConfirmedTokensTransactionsAndEachConfirmationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewConfirmedTokensTransactionsAndEachConfirmationRB newConfirmedTokensTransactionsAndEachConfirmationRB = null;
            //var response = instance.NewConfirmedTokensTransactionsAndEachConfirmation(blockchain, network, context, newConfirmedTokensTransactionsAndEachConfirmationRB);
            //Assert.IsType<NewConfirmedTokensTransactionsAndEachConfirmationR>(response);
        }

        /// <summary>
        /// Test NewUnconfirmedCoinsTransactions
        /// </summary>
        [Fact]
        public void NewUnconfirmedCoinsTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewUnconfirmedCoinsTransactionsRB newUnconfirmedCoinsTransactionsRB = null;
            //var response = instance.NewUnconfirmedCoinsTransactions(blockchain, network, context, newUnconfirmedCoinsTransactionsRB);
            //Assert.IsType<NewUnconfirmedCoinsTransactionsR>(response);
        }

        /// <summary>
        /// Test NewUnconfirmedTokensTransactions
        /// </summary>
        [Fact]
        public void NewUnconfirmedTokensTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string context = null;
            //NewUnconfirmedTokensTransactionsRB newUnconfirmedTokensTransactionsRB = null;
            //var response = instance.NewUnconfirmedTokensTransactions(blockchain, network, context, newUnconfirmedTokensTransactionsRB);
            //Assert.IsType<NewUnconfirmedTokensTransactionsR>(response);
        }
    }
}
