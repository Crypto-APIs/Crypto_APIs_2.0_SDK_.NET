/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CryptoAPIs.Client;
using CryptoAPIs.Api;
// uncomment below to import models
//using CryptoAPIs.Model;

namespace CryptoAPIs.Test.Api
{
    /// <summary>
    ///  Class for testing CallbackDataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CallbackDataApiTests : IDisposable
    {
        private CallbackDataApi instance;

        public CallbackDataApiTests()
        {
            instance = new CallbackDataApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CallbackDataApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CallbackDataApi
            //Assert.IsType<CallbackDataApi>(instance);
        }

        /// <summary>
        /// Test GetAddressDetailsFromCallback
        /// </summary>
        [Fact]
        public void GetAddressDetailsFromCallbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string address = null;
            //string context = null;
            //var response = instance.GetAddressDetailsFromCallback(blockchain, network, address, context);
            //Assert.IsType<GetAddressDetailsFromCallbackR>(response);
        }

        /// <summary>
        /// Test GetBlockDetailsByBlockHashFromCallback
        /// </summary>
        [Fact]
        public void GetBlockDetailsByBlockHashFromCallbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string blockHash = null;
            //string context = null;
            //var response = instance.GetBlockDetailsByBlockHashFromCallback(blockchain, network, blockHash, context);
            //Assert.IsType<GetBlockDetailsByBlockHashFromCallbackR>(response);
        }

        /// <summary>
        /// Test GetBlockDetailsByBlockHeightFromCallback
        /// </summary>
        [Fact]
        public void GetBlockDetailsByBlockHeightFromCallbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string blockHeight = null;
            //string context = null;
            //var response = instance.GetBlockDetailsByBlockHeightFromCallback(blockchain, network, blockHeight, context);
            //Assert.IsType<GetBlockDetailsByBlockHeightFromCallbackR>(response);
        }

        /// <summary>
        /// Test GetTransactionDetailsByTransactionIDFromCallback
        /// </summary>
        [Fact]
        public void GetTransactionDetailsByTransactionIDFromCallbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockchain = null;
            //string network = null;
            //string transactionId = null;
            //string context = null;
            //var response = instance.GetTransactionDetailsByTransactionIDFromCallback(blockchain, network, transactionId, context);
            //Assert.IsType<GetTransactionDetailsByTransactionIDFromCallbackR>(response);
        }
    }
}
